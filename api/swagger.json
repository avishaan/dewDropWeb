{
  "swagger": "2.0",
  "info": {
    "title": "Hexna Template API",
    "description": "API Generating and Saving Template information",
    "version": "0.1"
  },
  "produces": ["application/json"],
  "host": "localhost:3000",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/api",
  "paths": {
    "/v1/contracts/{cid}/submissions": {
      "get": {
        "x-swagger-router-controller": "submissions",
        "operationId": "readAllSubmissions",
        "tags": ["/submissions"],
        "description": "Read all submission for a specific contract",
        "parameters": [
        {
          "name": "cid",
          "in": "path",
          "description": "Id of contract to fetch the submissions of",
          "required": true,
          "type": "string"
        }
        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "Submissions"
              }
            }
          }
        }
      }
    },
    "/v1/submissions": {
      "post": {
        "x-swagger-router-controller": "submissions",
        "operationId": "createOneSubmission",
        "tags": ["/submissions"],
        "description": "Save a submission object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The submission being submitted",
            "required": true,
            "schema": {
              "$ref": "Submission"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "$ref": "Submission"
            }
          }
        }
      }
    },
    "/v1/contracts": {
      "get": {
        "x-swagger-router-controller": "contracts",
        "operationId": "readAllContracts",
        "tags": ["/contracts"],
        "description": "Get all the contracts in the system",
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "$ref": "Contract"
            }
          }
        }
      },
      "post": {
        "x-swagger-router-controller": "contracts",
        "operationId": "createOneContract",
        "tags": ["/contracts"],
        "description": "Save a contract object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The contract being submitted",
            "required": true,
            "schema": {
              "$ref": "Contract"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "$ref": "Contract"
            }
          }
        }
      }
    },
    "/v1/templates": {
      "get": {
        "x-swagger-router-controller": "templates",
        "operationId": "readAllTemplates",
        "tags": ["/templates"],
        "description": "Get a default template template object for the user to use",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "The state the template template will be needed in",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "Error"
            }
          },
          "200": {
            "description": "Successful request.",
            "schema": {
              "$ref": "Template"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": ["message"]
    },
    "Version": {
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "required": ["version"]
    },
    "Questions": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["text", "date", "binary", "multiChoice", "multiAnswer", "amountPerCycle"]
        },
        "question": {
          "type": "string"
        },
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cycles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["type", "question"]
    },
    "QuestionsWithAnswers": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["text", "date", "binary", "multiChoice", "multiAnswer", "amountPerCycle"]
        },
        "question": {
          "type": "string"
        },
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cycles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["type", "question", "answers"]
    },
    "Submissions": {
      "properties": {
        "_id": {
          "type": "string"
        }
      }
    },
    "Submission": {
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "$ref": "QuestionsWithAnswers"
          }
        },
        "version": {
          "type": "string"
        },
        "contract": {
          "type": "string"
        }
      },
      "required": ["questions", "version", "contract"]
    },
    "Contract": {
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "$ref": "QuestionsWithAnswers"
          }
        },
        "version": {
          "type": "string"
        }
      },
      "required": ["questions", "version"]
    },
    "Template": {
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "$ref": "Questions"
          }
        },
        "version": {
          "$ref": "Version"
        }
      },
      "required": ["questions", "version"]
    }
  }
}

